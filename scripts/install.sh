#!/usr/bin/env bash
# shellcheck disable=SC1091,SC2086,SC1001,SC2317
# shellcheck source="$HOME/.bashrc"
# shellcheck source="${env_path}"

clear

SPOKIT_INST_DIR=/opt/spokit
SPOKIT_HOME=$HOME/spokit
gum_version="0.16.2"
spokit_version="0.4.2"

source ${HOME}/.bashrc


style(){
  echo -e '{{ Color "15" " '"$1"' " }}''{{ Color "11" " '"$2"' " }}' "\n" | gum format -t template; echo
}


create_env_file(){
mkdir -p ${SPOKIT_HOME}
cat <<-EOF > ${SPOKIT_HOME}/env
#!/bin/bash
#‰∏ªË¶Å„Å™ÂÄ§„ÅØÁí∞Â¢ÉÂ§âÊï∞„Å´ÂÖ•„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ "${HOME}"/.bashrc

NODE_TYPE="${1}"
SYNC_NETWORK="${2}"
COLDKEYS_DIR="\\${HOME}/cold-keys"
COLD_SKEY_FILENAME="node.skey"
COLD_VKEY_FILENAME="node.vkey"
COUNTER_FILENAME="node.counter"
KES_SKEY_FILENAME="kes.skey"
KES_VKEY_FILENAME="kes.vkey"
VRF_SKEY_FILENAME="vrf.skey"
VRF_VKEY_FILENAME="vrf.vkey"
NODE_CERT_FILENAME="node.cert"
POOL_CERT_FILENAME="pool.cert"
PAYMENT_SKEY_FILENAME="payment.skey"
PAYMENT_VKEY_FILENAME="payment.vkey"
PAYMENT_ADDR_FILENAME="payment.addr"
STAKE_SKEY_FILENAME="stake.skey"
STAKE_VKEY_FILENAME="stake.vkey"
STAKE_ADDR_FILENAME="stake.addr"
STAKE_CERT_FILENAME="stake.cert"
POOL_META_FILENAME="poolMetaData.json"
POOL_ID_FILENAME="pool.id"
POOL_ID_BECH32_FILENAME="pool.id-bech32"
KOIOS_API="${4}"
NODE_PROMETHEUS_PORT="12798"
UFW_STATUS="${3}"
EOF
}


DotSpinner3(){
    gum spin --spinner dot --title "${1}" -- sleep 3
}


view_title_logo(){
    echo -e "${CYAN}"
    cat << "EOF"
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   
‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù      ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù 
EOF
    echo -e "${GREEN}                   ${1}                     ${NC}"
    echo -e "${WHITE}============================================${NC}"
    echo -e "${CYAN}           Cardano SPO Tool Kit              ${NC}"
    echo -e "${YELLOW}         ${2}                           ${NC}"
    echo -e "${WHITE}============================================${NC}"
}

RED='\033[0;31m'
GREEN='\033[0;32m'
CYAN='\e[36m'
PURPLE='\e[35m'
YELLOW='\e[33m'
BLUE='\e[34m'
WHITE='\e[37m'
BOLD='\e[1m'
UNDERLINE='\e[4m'
NC='\033[0m' # No Color

##############
#Ëµ∑Âãï„Çø„Ç§„Éà„É´
##############

if [[ $whoami = "root" ]]; then
    echo -e "${RED}root„É¶„Éº„Ç∂„Éº„Åß„ÅØÂÆüË°å„Åß„Åç„Åæ„Åõ„Çì${NC}"
    echo "‰∏ÄËà¨„É¶„Éº„Ç∂„Éº„ÅßÂÜçÂ∫¶ÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
    exit 1
fi

if [[ ! -d $SPOKIT_INST_DIR ]]; then
#Áí∞Â¢ÉË®≠ÂÆö
cat > ~/.tmux.conf << EOF
set -g default-terminal "screen-256color"
EOF
    view_title_logo "${spokit_version}" "„É©„Ç§„Éñ„É©„É™„Ç§„É≥„Çπ„Éà„Éº„É´"
    #„É©„Ç§„Éñ„É©„É™„Ç§„É≥„Çπ„Éà„Éº„É´
    printf "ÁÆ°ÁêÜËÄÖ(sudo)„Éë„Çπ„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ\n"
    echo
    sudo apt update && sudo apt upgrade -y
    sudo apt install jq curl wget -y
    if [ ! -f "/usr/bin/gum" ]; then
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg
        echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" | sudo tee /etc/apt/sources.list.d/charm.list
        sudo apt update && sudo apt install gum=${gum_version}
    fi
    sudo apt-mark hold gum
    echo -e "${GREEN}Èñ¢ÈÄ£„É©„Ç§„Éñ„É©„É™„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åó„Åü${NC}"
else
    echo -e ${YELLOW}"Spokit„ÅØ„Åô„Åß„Å´„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åô${NC}"
    echo -e "${GREEN}spokit${NC} „Åæ„Åü„ÅØ ${GREEN}spokit pool${NC} „ÅßËµ∑Âãï„Åô„Çã„Åã„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ"
    echo
    read -p "„Ç§„É≥„Çπ„Éà„Éº„É´„ÇíÁµÇ‰∫Ü„Åô„Çã„Å´„ÅØEnter„Ç≠„Éº„ÇíÊäº„Åó„Å¶„Åè„Å†„Åï„ÅÑ..."
fi


##------ÂàùÊúüË®≠ÂÆö
clear
if [ ! -d "${SPOKIT_HOME}" ]; then
    view_title_logo "${spokit_version}" "„Éé„Éº„Éâ„Çª„ÉÉ„Éà„Ç¢„ÉÉ„ÉóÂàùÊúüË®≠ÂÆö"

    if [ -d "${NODE_HOME}" ]; then 
        echo -e "Êó¢Â≠ò„ÅÆ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØË®≠ÂÆö„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü : ${NODE_CONFIG}\n"
        work_dir=${NODE_HOME}
        sync_network=${NODE_CONFIG}
    else
        NODE_TYPE=$(gum choose --header.foreground="244" --header="„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„Éé„Éº„Éâ„Çø„Ç§„Éó„ÇíÈÅ∏Êäû„Åó„Å¶‰∏ã„Åï„ÅÑ" "„Éñ„É≠„ÉÉ„ÇØ„Éó„É≠„Éá„É•„Éº„Çµ„Éº" "„É™„É¨„Éº" --no-show-help)
        sync_network=$(gum choose --header.foreground="244" --header="Êé•Á∂ö„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ" --no-show-help "Mainnet" "Preview-Testnet" "Preprod-Testnet")
        work_dir=$(gum input --value "${HOME}/cnode" --width=0 --no-show-help --header.foreground="244" --header="„Éó„Éº„É´‰ΩúÊ•≠„Éá„Ç£„É¨„ÇØ„Éà„É™„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ„Éá„Éï„Ç©„É´„Éà„ÅÆÂ†¥Âêà„ÅØ„Åù„ÅÆ„Åæ„ÅæEnter„ÇíÊäº„Åó„Å¶‰∏ã„Åï„ÅÑ" --header.foreground="99" --placeholder "${HOME}/cnode")
    fi

        # ufwÁ¢∫Ë™ç
    UFW_STATUS=$(sudo ufw status | grep -i "Status:" | awk '{print $2}')
    if [ "${UFW_STATUS}" != "active" ]; then
        echo -e "${YELLOW}UFW(ÂÜÖÈÉ®„Éï„Ç°„Ç§„Ç¢„Ç¶„Ç©„Éº„É´)„ÅåÁÑ°Âäπ„Å´„Å™„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ${NC}"
        UFW_STATUS="disabled"
    else
        echo -e "${GREEN}UFW(ÂÜÖÈÉ®„Éï„Ç°„Ç§„Ç¢„Ç¶„Ç©„Éº„É´)„ÅØÊúâÂäπ„Å´„Å™„Å£„Å¶„ÅÑ„Åæ„Åô${NC}"
        UFW_STATUS="enabled"
        sleep 1
    fi

    #Spokit„Ç§„É≥„Çπ„Éà„Éº„É´
    
    printf "${YELLOW}SPOKIT„Çí„Ç§„É≥„Çπ„Éà„Éº„É´...${NC}\n"
    mkdir -p $HOME/git
    cd $HOME/git

    if [[ "$SPOKIT_MODE" == "develop" ]]; then
        echo "üß™ SPOKIT Develop Mode"
        base_url="https://github.com/btbf/sjg-tools/raw/refs/heads/develop/dist/spokit-develop.tar.gz"
    else
        echo "üöÄ SPOKIT Release Mode"
        base_url="https://github.com/btbf/sjg-tools/archive/refs/tags/${spokit_version}.tar.gz"
    fi

    wget -q ${base_url} -O spokit.tar.gz

    if [ $? -ne 0 ]; then
        echo -e "${RED}SPOKIT„ÅÆ„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„Ç§„É≥„Çø„Éº„Éç„ÉÉ„ÉàÊé•Á∂ö„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ${NC}"
        exit 1
    fi
    tar -xzf spokit.tar.gz
    if [ $? -ne 0 ]; then
        echo -e "${RED}SPOKIT„ÅÆËß£Âáç„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ${NC}"
        exit 1
    fi
    rm spokit.tar.gz
    sudo mkdir -p ${SPOKIT_INST_DIR}
    cd sjg-tools-${spokit_version}/scripts
    sudo cp -pR ./* ${SPOKIT_INST_DIR}

    chmod 755 ${SPOKIT_INST_DIR}/spokit_run.sh
    chmod 755 ${SPOKIT_INST_DIR}/spokit.sh

    printf "${YELLOW}SPOKIT„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åó„Åü${NC}\n"
    rm -rf $HOME/git/sjg-tools-${spokit_version}

    echo
    case "${sync_network}" in
        "Mainnet" )
            NODE_CONFIG=mainnet
            NODE_NETWORK='"--mainnet"'
            CARDANO_NODE_NETWORK_ID=mainnet
            KOIOS_DOMAIN="https://api.koios.rest/api/v1"
        ;;
        "Preview-Testnet" )
            NODE_CONFIG=preview
            NODE_NETWORK='"--testnet-magic 2"'
            CARDANO_NODE_NETWORK_ID=2
            KOIOS_DOMAIN="https://preview.koios.rest/api/v1"
        ;;
        "Preprod-Testnet" )
            NODE_CONFIG=preprod
            NODE_NETWORK='"--testnet-magic 1"'
            CARDANO_NODE_NETWORK_ID=1
            KOIOS_DOMAIN="https://preprod.koios.rest/api/v1"
        ;;
    esac

    style "„Éé„Éº„Éâ„Çø„Ç§„Éó:" "${NODE_TYPE}"
    style "„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ:" "${sync_network}"
    style "‰ΩúÊ•≠„Éá„Ç£„É¨„ÇØ„Éà„É™:" "${work_dir}"
    style "UFW„Çπ„ÉÜ„Éº„Çø„Çπ:" "${UFW_STATUS}"
    echo
    gum confirm "„Åì„ÅÆË®≠ÂÆö„Åß„Çà„Çç„Åó„ÅÑ„Åß„Åô„ÅãÔºü" --default=true --no-show-help --affirmative="„ÅØ„ÅÑ" --negative="„ÅÑ„ÅÑ„Åà" && iniSettings="Yes" || iniSettings="No"

    if [ "${iniSettings}" == "Yes" ]; then
        if [ ! -d "$NODE_HOME" ]; then
            echo "Áí∞Â¢ÉÂ§âÊï∞„ÇíËøΩÂä†„Åó„Åæ„Åô"
            echo PATH="$HOME/.local/bin:$PATH" >> "${HOME}"/.bashrc
            echo export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH" >> "${HOME}"/.bashrc
            echo export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH" >> "${HOME}"/.bashrc
            echo export NODE_HOME="${work_dir}" >> "${HOME}"/.bashrc
            echo export NODE_CONFIG="${NODE_CONFIG}" >> "${HOME}"/.bashrc
            echo export NODE_NETWORK="${NODE_NETWORK}" >> "${HOME}"/.bashrc
            echo export CARDANO_NODE_NETWORK_ID="${CARDANO_NODE_NETWORK_ID}" >> "${HOME}"/.bashrc
            echo export CARDANO_NODE_SOCKET_PATH="${work_dir}/db/socket" >> "${HOME}"/.bashrc
            echo export SPOKIT_INST_DIR="${SPOKIT_INST_DIR}" >> "${HOME}"/.bashrc
            echo export SPOKIT_HOME="${SPOKIT_HOME}" >> "${HOME}"/.bashrc
            echo alias spokit="'${SPOKIT_INST_DIR}/spokit_run.sh'" >> "${HOME}"/.bashrc
            echo alias cnode='"journalctl -u cardano-node -f"' >> "${HOME}"/.bashrc
            echo alias cnstart='"sudo systemctl start cardano-node"' >> "${HOME}"/.bashrc
            echo alias cnrestart='"sudo systemctl reload-or-restart cardano-node"' >> "${HOME}"/.bashrc
            echo alias cnstop='"sudo systemctl stop cardano-node"' >> "${HOME}"/.bashrc
            echo alias cnreload='"pkill -HUP cardano-node"' >> "${HOME}"/.bashrc
            echo alias glive="'cd ${work_dir}/scripts; ./gLiveView.sh'" >> "${HOME}"/.bashrc
        else
            echo export SPOKIT_INST_DIR="${SPOKIT_INST_DIR}" >> "${HOME}"/.bashrc
            echo export SPOKIT_HOME="${SPOKIT_HOME}" >> "${HOME}"/.bashrc
            echo alias spokit="'${SPOKIT_INST_DIR}/spokit_run.sh'" >> "${HOME}"/.bashrc
        fi


        #Ë®≠ÂÆö„Éï„Ç°„Ç§„É´‰ΩúÊàê
        create_env_file "${NODE_TYPE}" "${NODE_CONFIG}" "${UFW_STATUS}" "${KOIOS_DOMAIN}"

        echo
        style "Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü" "${SPOKIT_HOME}/env"
        echo

        DotSpinner3 "ÂàùÊúüË®≠ÂÆö„ÇíÁµÇ‰∫Ü„Åó„Åæ„Åô"
        echo
        echo -e "${RED}‚ë†‰∏ãË®ò„Ç≥„Éû„É≥„Éâ„ÇíÂÆüË°å„Åó„Å¶Áí∞Â¢ÉÂ§âÊï∞„ÇíÂÜçË™≠„ÅøËæº„Åø„Åó„Å¶„Åè„Å†„Åï„ÅÑ${NC}"
        echo "------------------------"
        echo "source $HOME/.bashrc"
        echo "------------------------"
        echo
        echo -e "${YELLOW}‚ë†Ubuntu„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ë®≠ÂÆö${NC}"
        echo "------------------------"
        echo -e "${GREEN}spokit ubuntu${NC}"
        echo "------------------------"
        echo
        echo -e "${YELLOW}‚ë°„Éó„Éº„É´ÊßãÁØâ${NC}"
        echo "------------------------"
        echo -e "${GREEN}spokit pool${NC}"
        echo "------------------------"
        echo
        echo -e "${YELLOW}‚ë°„Éó„Éº„É´ÈÅãÁî®${NC}"
        echo "------------------------"
        echo -e "${GREEN}spokit${NC}"
        echo "------------------------"
        echo
    else
        clear
        echo
        echo "ÊúÄÂàù„Åã„Çâ„ÇÑ„ÇäÁõ¥„ÅôÂ†¥Âêà„ÅØ„ÉÑ„Éº„É´„ÇíÂÜçÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
        exit
    fi

fi

